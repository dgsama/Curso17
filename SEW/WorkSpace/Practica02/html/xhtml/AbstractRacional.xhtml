<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Clase Abstracta</title>
<link rel="stylesheet" type="text/css" href="../css/java.css"/>
</head>
<body class="hl"><pre class="hl"><a id="linea_1"></a><span class="hl lin">    1 </span><span class="hl kwa">package</span> estDatos<span class="hl opt">;</span>
<a id="linea_2"></a><span class="hl lin">    2 </span>
<a id="linea_3"></a><span class="hl lin">    3 </span><span class="hl com">/**</span>
<a id="linea_4"></a><span class="hl lin">    4 </span><span class="hl com"> * Esta clase abstracta propociona un esqueleto de implementación</span>
<a id="linea_5"></a><span class="hl lin">    5 </span><span class="hl com"> * de la interfaz {&#64;code Racional} que facilita la obtención de un</span>
<a id="linea_6"></a><span class="hl lin">    6 </span><span class="hl com"> * tipo concreto.</span>
<a id="linea_7"></a><span class="hl lin">    7 </span><span class="hl com"> * </span>
<a id="linea_8"></a><span class="hl lin">    8 </span><span class="hl com"> * &#64;author Pedro Hernández</span>
<a id="linea_9"></a><span class="hl lin">    9 </span><span class="hl com"> */</span>
<a id="linea_10"></a><span class="hl lin">   10 </span>
<a id="linea_11"></a><span class="hl lin">   11 </span><span class="hl kwa">public abstract class</span> AbstractRacional <span class="hl kwa">implements</span> Racional<span class="hl opt">{</span>
<a id="linea_12"></a><span class="hl lin">   12 </span>    
<a id="linea_13"></a><span class="hl lin">   13 </span>    <span class="hl com">/**</span>
<a id="linea_14"></a><span class="hl lin">   14 </span><span class="hl com">     * Retorna el máximo común divisor de los dos </span>
<a id="linea_15"></a><span class="hl lin">   15 </span><span class="hl com">     * enteros que se especifican</span>
<a id="linea_16"></a><span class="hl lin">   16 </span><span class="hl com">     * &#64;param a el primer entero que se especifica</span>
<a id="linea_17"></a><span class="hl lin">   17 </span><span class="hl com">     * &#64;param b el segundo entero que se especifica</span>
<a id="linea_18"></a><span class="hl lin">   18 </span><span class="hl com">     * &#64;return el máximo común divisor de {&#64;code a}</span>
<a id="linea_19"></a><span class="hl lin">   19 </span><span class="hl com">     * y {&#64;code b}</span>
<a id="linea_20"></a><span class="hl lin">   20 </span><span class="hl com">     */</span>
<a id="linea_21"></a><span class="hl lin">   21 </span>    <span class="hl kwa">protected static</span> <span class="hl kwb">int</span> <span class="hl kwd">mcd</span><span class="hl opt">(</span><span class="hl kwb">int</span> a<span class="hl opt">,</span> <span class="hl kwb">int</span> b<span class="hl opt">) {</span>
<a id="linea_22"></a><span class="hl lin">   22 </span>        <span class="hl slc">// el máximo común divisor se obtiene</span>
<a id="linea_23"></a><span class="hl lin">   23 </span>        <span class="hl slc">// mediante el algoritmo de Euclides</span>
<a id="linea_24"></a><span class="hl lin">   24 </span>        <span class="hl kwb">int</span> t<span class="hl opt">,</span> x <span class="hl opt">=</span> Math<span class="hl opt">.</span><span class="hl kwd">abs</span><span class="hl opt">(</span>a<span class="hl opt">),</span> y <span class="hl opt">=</span> Math<span class="hl opt">.</span><span class="hl kwd">abs</span><span class="hl opt">(</span>b<span class="hl opt">);</span>
<a id="linea_25"></a><span class="hl lin">   25 </span>        <span class="hl kwa">while</span> <span class="hl opt">(</span>y <span class="hl opt">&gt;</span> <span class="hl num">0</span><span class="hl opt">) {</span>
<a id="linea_26"></a><span class="hl lin">   26 </span>            t <span class="hl opt">=</span> y<span class="hl opt">;</span>
<a id="linea_27"></a><span class="hl lin">   27 </span>            y <span class="hl opt">=</span> x <span class="hl opt">%</span> y<span class="hl opt">;</span>
<a id="linea_28"></a><span class="hl lin">   28 </span>            x <span class="hl opt">=</span> t<span class="hl opt">;</span>
<a id="linea_29"></a><span class="hl lin">   29 </span>        <span class="hl opt">}</span>
<a id="linea_30"></a><span class="hl lin">   30 </span>        <span class="hl kwa">return</span> x<span class="hl opt">;</span>
<a id="linea_31"></a><span class="hl lin">   31 </span>    <span class="hl opt">}</span>
<a id="linea_32"></a><span class="hl lin">   32 </span>    
<a id="linea_33"></a><span class="hl lin">   33 </span>    <span class="hl com">/**</span>
<a id="linea_34"></a><span class="hl lin">   34 </span><span class="hl com">     * Retorna el mínimo común múltiplo de los dos </span>
<a id="linea_35"></a><span class="hl lin">   35 </span><span class="hl com">     * enteros que se especifican</span>
<a id="linea_36"></a><span class="hl lin">   36 </span><span class="hl com">     * &#64;param a el primer entero que se proporciona</span>
<a id="linea_37"></a><span class="hl lin">   37 </span><span class="hl com">     * &#64;param b el segundo entero que se proporiona</span>
<a id="linea_38"></a><span class="hl lin">   38 </span><span class="hl com">     * &#64;return el mínimo común múltiplo de {&#64;code a}</span>
<a id="linea_39"></a><span class="hl lin">   39 </span><span class="hl com">     * y {&#64;code b}</span>
<a id="linea_40"></a><span class="hl lin">   40 </span><span class="hl com">     */</span>
<a id="linea_41"></a><span class="hl lin">   41 </span>    <span class="hl kwa">protected static</span> <span class="hl kwb">int</span> <span class="hl kwd">mcm</span><span class="hl opt">(</span><span class="hl kwb">int</span> a<span class="hl opt">,</span> <span class="hl kwb">int</span> b<span class="hl opt">) {</span>
<a id="linea_42"></a><span class="hl lin">   42 </span>        <span class="hl kwa">return</span> Math<span class="hl opt">.</span><span class="hl kwd">abs</span><span class="hl opt">(</span>a <span class="hl opt">*</span> b <span class="hl opt">/</span> <span class="hl kwd">mcd</span><span class="hl opt">(</span>a<span class="hl opt">,</span> b<span class="hl opt">));</span>
<a id="linea_43"></a><span class="hl lin">   43 </span>    <span class="hl opt">}</span>
<a id="linea_44"></a><span class="hl lin">   44 </span>    
<a id="linea_45"></a><span class="hl lin">   45 </span>    <span class="hl kwa">protected</span> <span class="hl kwd">AbstractRacional</span><span class="hl opt">() {</span>
<a id="linea_46"></a><span class="hl lin">   46 </span>        
<a id="linea_47"></a><span class="hl lin">   47 </span>    <span class="hl opt">}</span>
<a id="linea_48"></a><span class="hl lin">   48 </span>    
<a id="linea_49"></a><span class="hl lin">   49 </span>    <span class="hl com">/**</span>
<a id="linea_50"></a><span class="hl lin">   50 </span><span class="hl com">     * {&#64;inheritDoc}</span>
<a id="linea_51"></a><span class="hl lin">   51 </span><span class="hl com">     */</span>
<a id="linea_52"></a><span class="hl lin">   52 </span>    <span class="hl kwa">public abstract</span> <span class="hl kwb">int</span> <span class="hl kwd">numerador</span><span class="hl opt">();</span>
<a id="linea_53"></a><span class="hl lin">   53 </span>
<a id="linea_54"></a><span class="hl lin">   54 </span>    <span class="hl com">/**</span>
<a id="linea_55"></a><span class="hl lin">   55 </span><span class="hl com">     * {&#64;inheritDoc}</span>
<a id="linea_56"></a><span class="hl lin">   56 </span><span class="hl com">     */</span>
<a id="linea_57"></a><span class="hl lin">   57 </span>    <span class="hl kwa">public abstract</span> <span class="hl kwb">int</span> <span class="hl kwd">denominador</span><span class="hl opt">();</span>
<a id="linea_58"></a><span class="hl lin">   58 </span>
<a id="linea_59"></a><span class="hl lin">   59 </span>    <span class="hl com">/**</span>
<a id="linea_60"></a><span class="hl lin">   60 </span><span class="hl com">     * {&#64;inheritDoc}</span>
<a id="linea_61"></a><span class="hl lin">   61 </span><span class="hl com">     */</span>
<a id="linea_62"></a><span class="hl lin">   62 </span>    <span class="hl kwa">public abstract</span> Racional <span class="hl kwd">suma</span><span class="hl opt">(</span>Racional r<span class="hl opt">);</span>
<a id="linea_63"></a><span class="hl lin">   63 </span>    
<a id="linea_64"></a><span class="hl lin">   64 </span>    <span class="hl com">/**</span>
<a id="linea_65"></a><span class="hl lin">   65 </span><span class="hl com">     * {&#64;inheritDoc}</span>
<a id="linea_66"></a><span class="hl lin">   66 </span><span class="hl com">     */</span>
<a id="linea_67"></a><span class="hl lin">   67 </span>    <span class="hl kwa">public abstract</span> Racional <span class="hl kwd">reduce</span><span class="hl opt">();</span>
<a id="linea_68"></a><span class="hl lin">   68 </span>    
<a id="linea_69"></a><span class="hl lin">   69 </span>    <span class="hl com">/**</span>
<a id="linea_70"></a><span class="hl lin">   70 </span><span class="hl com">     * Retorna un string representando a este racional.</span>
<a id="linea_71"></a><span class="hl lin">   71 </span><span class="hl com">     * &#64;return el string {&#64;code n/d}, donde {&#64;code n}</span>
<a id="linea_72"></a><span class="hl lin">   72 </span><span class="hl com">     * es el string que representa al numerador de este</span>
<a id="linea_73"></a><span class="hl lin">   73 </span><span class="hl com">     * racional y {&#64;code d} es el string que representa</span>
<a id="linea_74"></a><span class="hl lin">   74 </span><span class="hl com">     * a su denominador.</span>
<a id="linea_75"></a><span class="hl lin">   75 </span><span class="hl com">     */</span>
<a id="linea_76"></a><span class="hl lin">   76 </span>    <span class="hl kwc">&#64;Override</span>
<a id="linea_77"></a><span class="hl lin">   77 </span>    <span class="hl kwa">public</span> String <span class="hl kwd">toString</span><span class="hl opt">() {</span>
<a id="linea_78"></a><span class="hl lin">   78 </span>        Integer n <span class="hl opt">=</span> <span class="hl kwa">this</span><span class="hl opt">.</span><span class="hl kwd">numerador</span><span class="hl opt">();</span>
<a id="linea_79"></a><span class="hl lin">   79 </span>        <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">this</span><span class="hl opt">.</span><span class="hl kwd">denominador</span><span class="hl opt">() ==</span> <span class="hl num">1</span><span class="hl opt">) {</span>
<a id="linea_80"></a><span class="hl lin">   80 </span>            <span class="hl kwa">return</span> n<span class="hl opt">.</span><span class="hl kwd">toString</span><span class="hl opt">();</span>
<a id="linea_81"></a><span class="hl lin">   81 </span>        <span class="hl opt">}</span>
<a id="linea_82"></a><span class="hl lin">   82 </span>        Integer d <span class="hl opt">=</span> <span class="hl kwa">this</span><span class="hl opt">.</span><span class="hl kwd">denominador</span><span class="hl opt">();</span>
<a id="linea_83"></a><span class="hl lin">   83 </span>        <span class="hl kwa">return</span> n<span class="hl opt">.</span><span class="hl kwd">toString</span><span class="hl opt">() +</span> <span class="hl str">&quot;/&quot;</span> <span class="hl opt">+</span> d<span class="hl opt">.</span><span class="hl kwd">toString</span><span class="hl opt">();</span>
<a id="linea_84"></a><span class="hl lin">   84 </span>    <span class="hl opt">}</span>
<a id="linea_85"></a><span class="hl lin">   85 </span>        
<a id="linea_86"></a><span class="hl lin">   86 </span>    <span class="hl com">/**</span>
<a id="linea_87"></a><span class="hl lin">   87 </span><span class="hl com">     * Indica si este racional es igual al especificado.</span>
<a id="linea_88"></a><span class="hl lin">   88 </span><span class="hl com">     * En primer lugar se comprueba si el objeto especificado</span>
<a id="linea_89"></a><span class="hl lin">   89 </span><span class="hl com">     * es este racional, en cuyo caso retorna {&#64;code true}. En</span>
<a id="linea_90"></a><span class="hl lin">   90 </span><span class="hl com">     * otro caso se comprueba que el objeto especificado sea</span>
<a id="linea_91"></a><span class="hl lin">   91 </span><span class="hl com">     * un racional, de no serlo se retorna {&#64;code false}. Por</span>
<a id="linea_92"></a><span class="hl lin">   92 </span><span class="hl com">     * último se comprueba si ambos racionales son iguales</span>
<a id="linea_93"></a><span class="hl lin">   93 </span><span class="hl com">     * &#64;param obj el objeto especificado</span>
<a id="linea_94"></a><span class="hl lin">   94 </span><span class="hl com">     * &#64;return {&#64;code true} si el objeto especificado es igual</span>
<a id="linea_95"></a><span class="hl lin">   95 </span><span class="hl com">     * a este racional</span>
<a id="linea_96"></a><span class="hl lin">   96 </span><span class="hl com">     */</span>
<a id="linea_97"></a><span class="hl lin">   97 </span>    <span class="hl kwc">&#64;Override</span>   
<a id="linea_98"></a><span class="hl lin">   98 </span>    <span class="hl kwa">public</span> <span class="hl kwb">boolean</span> <span class="hl kwd">equals</span><span class="hl opt">(</span>Object obj<span class="hl opt">) {</span>
<a id="linea_99"></a><span class="hl lin">   99 </span>        <span class="hl kwa">if</span> <span class="hl opt">(</span><span class="hl kwa">this</span> <span class="hl opt">==</span> obj<span class="hl opt">)</span>
<a id="linea_100"></a><span class="hl lin">  100 </span>            <span class="hl kwa">return</span> true<span class="hl opt">;</span>
<a id="linea_101"></a><span class="hl lin">  101 </span>        <span class="hl kwa">if</span> <span class="hl opt">(</span>obj <span class="hl opt">==</span> null<span class="hl opt">)</span>
<a id="linea_102"></a><span class="hl lin">  102 </span>            <span class="hl kwa">return</span> false<span class="hl opt">;</span>
<a id="linea_103"></a><span class="hl lin">  103 </span>        <span class="hl kwa">if</span> <span class="hl opt">(</span>obj <span class="hl kwa">instanceof</span> Racional<span class="hl opt">) {</span>
<a id="linea_104"></a><span class="hl lin">  104 </span>            Racional r <span class="hl opt">= (</span>Racional<span class="hl opt">)</span> obj<span class="hl opt">;</span>
<a id="linea_105"></a><span class="hl lin">  105 </span>            <span class="hl kwa">return this</span><span class="hl opt">.</span><span class="hl kwd">numerador</span><span class="hl opt">() *</span> r<span class="hl opt">.</span><span class="hl kwd">denominador</span><span class="hl opt">() ==</span>
<a id="linea_106"></a><span class="hl lin">  106 </span>                   <span class="hl kwa">this</span><span class="hl opt">.</span><span class="hl kwd">denominador</span><span class="hl opt">() *</span> r<span class="hl opt">.</span><span class="hl kwd">numerador</span><span class="hl opt">();</span>
<a id="linea_107"></a><span class="hl lin">  107 </span>        <span class="hl opt">}</span>
<a id="linea_108"></a><span class="hl lin">  108 </span>
<a id="linea_109"></a><span class="hl lin">  109 </span>        <span class="hl kwa">return</span> false<span class="hl opt">;</span>
<a id="linea_110"></a><span class="hl lin">  110 </span>    <span class="hl opt">}</span>
<a id="linea_111"></a><span class="hl lin">  111 </span>
<a id="linea_112"></a><span class="hl lin">  112 </span><span class="hl opt">}</span>
</pre>
</body>
</html>
<!--HTML generated by highlight 3.9, http://www.andre-simon.de/-->
